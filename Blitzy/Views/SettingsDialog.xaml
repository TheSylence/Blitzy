<controls:MetroWindow x:Class="Blitzy.Views.SettingsDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Blitzy.Views" ShowInTaskbar="False"
        xmlns:settings="clr-namespace:Blitzy.ViewModels.Settings"
        xmlns:viewModels="clr-namespace:Blitzy.ViewModels" GlowBrush="{DynamicResource AccentColorBrush}"
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:lex="http://wpflocalizeextension.codeplex.com"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:behaviors="clr-namespace:Blitzy.Behaviors"
        xmlns:behaviours="http://metro.mahapps.com/winfx/xaml/shared"
        xmlns:core="clr-namespace:Blitzy.ViewModels.Settings.Core"
        xmlns:converters="clr-namespace:Blitzy.Converters"
        lex:ResxLocalizationProvider.DefaultAssembly="Blitzy"
		lex:ResxLocalizationProvider.DefaultDictionary="Strings" WindowStartupLocation="CenterOwner"
        mc:Ignorable="d" DataContext="{Binding SettingsDialog, Source={StaticResource Locator}}"
        Title="{lex:Loc Settings}" Height="480" Width="640">
	<i:Interaction.Behaviors>
		<behaviors:CloseWindow />
		<behaviors:CallbackOnLoad Callback="{Binding}" />
		<behaviours:BorderlessWindowBehavior />
		<behaviours:WindowsSettingBehaviour />
		<behaviours:GlowWindowBehavior />
	</i:Interaction.Behaviors>
	<Window.Resources>
		<Style TargetType="TreeViewItem" d:DataContext="{d:DesignInstance viewModels:TreeViewItemViewModel}">
			<Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
			<Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
			<Setter Property="FontWeight" Value="Normal" />
			<Style.Triggers>
				<Trigger Property="IsSelected" Value="True">
					<Setter Property="FontWeight" Value="Bold" />
				</Trigger>
			</Style.Triggers>
		</Style>

		<DataTemplate x:Key="EmptySettingsSections">
			<TextBlock Text="{lex:Loc PleaseSelectAnEntryFromTheList}" FontSize="{DynamicResource NormalFontSize}" />
		</DataTemplate>
		
		<converters:SettingsEditor x:Key="SettingsEditorConv" />
	</Window.Resources>
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="Auto" />
			<ColumnDefinition Width="Auto" />
			<ColumnDefinition />
		</Grid.ColumnDefinitions>

		<TreeView ItemsSource="{Binding TopLevelItems}" MinWidth="100">
			<TreeView.ItemTemplate>
				<HierarchicalDataTemplate DataType="viewModels:ITreeViewItemViewModel" ItemsSource="{Binding Children}">
					<DockPanel>
						<TextBlock Text="{Binding Text}" FontSize="{DynamicResource NormalFontSize}" />
					</DockPanel>
				</HierarchicalDataTemplate>
			</TreeView.ItemTemplate>
		</TreeView>

		<GridSplitter Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" ResizeBehavior="PreviousAndNext" ResizeDirection="Columns" Width="3" Background="{DynamicResource ControlBorderBrush}" />

		<ScrollViewer Grid.Column="2" Grid.Row="0" Margin="5">
			<ContentControl Content="{Binding SelectedItem}">
				<ContentControl.ContentTemplateSelector>
					<local:GenericTemplateSelector>
						<local:GenericTemplateSelectorItem TemplatedType="settings:AboutViewModel">
							<DataTemplate DataType="settings:AboutViewModel">
								<StackPanel Orientation="Vertical">
									<TextBlock>
										<TextBlock.Text>
											<MultiBinding StringFormat="{lex:Loc InfoVersionFormat}">
												<Binding Path="Version" />
												<Binding Path="GitVersion" />
											</MultiBinding>
										</TextBlock.Text>
									</TextBlock>
									<TextBlock Text="{Binding BuildDate, StringFormat={lex:Loc InfoBuildDateFormat}}" />
								</StackPanel>
							</DataTemplate>
						</local:GenericTemplateSelectorItem>
						<local:GenericTemplateSelectorItem TemplatedType="core:BehaviorSettingsViewModel">
							<DataTemplate DataType="core:BehaviorSettingsViewModel">
								<StackPanel Orientation="Vertical">
									<StackPanel.Resources>
										<Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
											<Setter Property="Margin" Value="5" />
										</Style>
									</StackPanel.Resources>

									<CheckBox IsChecked="{Binding CloseAfterExecution, Mode=TwoWay}" Content="{lex:Loc CloseAfterExecution}" />
									<CheckBox IsChecked="{Binding CloseOnFocusLost, Mode=TwoWay}" Content="{lex:Loc CloseOnFocusLost}" />
									<CheckBox IsChecked="{Binding CloseOnEscape, Mode=TwoWay}" Content="{lex:Loc CloseOnEscape}" />

									<CheckBox IsChecked="{Binding KeepInputContent, Mode=TwoWay}" Content="{lex:Loc KeepInputContent}" />
								</StackPanel>
							</DataTemplate>
						</local:GenericTemplateSelectorItem>
						<local:GenericTemplateSelectorItem TemplatedType="settings:LicensesViewModel">
							<DataTemplate DataType="settings:LicensesViewModel">
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition />
									</Grid.ColumnDefinitions>

									<ListView ItemsSource="{Binding Licenses}" SelectedItem="{Binding SelectedLicense, Mode=TwoWay}">
										<ListView.ItemTemplate>
											<DataTemplate DataType="settings:LicenseItem">
												<TextBlock Text="{Binding Name}" VerticalAlignment="Center" Margin="5,0" FontSize="{DynamicResource NormalFontSize}" />
											</DataTemplate>
										</ListView.ItemTemplate>
									</ListView>

									<TextBlock TextWrapping="Wrap" Text="{Binding SelectedLicense.Text}" FontSize="{DynamicResource NormalFontSize}" Grid.Column="1" />
								</Grid>
							</DataTemplate>
						</local:GenericTemplateSelectorItem>
						<local:GenericTemplateSelectorItem TemplatedType="core:VisualSettingsViewModel">
							<DataTemplate DataType="core:VisualSettingsViewModel">
								<StackPanel Orientation="Vertical">
									<StackPanel.Resources>
										<DataTemplate x:Key="ColorDataTemplate" DataType="core:ColorItem">
											<DockPanel>
												<Ellipse Fill="{Binding ColorBrush}"
								         Stroke="{Binding BorderBrush}"
								         Width="18" Height="18" />
												<TextBlock Text="{Binding Name}" Margin="5,0" />
											</DockPanel>
										</DataTemplate>
									</StackPanel.Resources>
									<TextBlock Text="{lex:Loc Theme}" FontSize="{DynamicResource NormalFontSize}" />
									<ComboBox ItemTemplate="{StaticResource ColorDataTemplate}"
					          SelectedItem="{Binding SelectedTheme, Mode=TwoWay}"
					          ItemsSource="{Binding AvailableThemes}" />
									<TextBlock Text="{lex:Loc Accent}" FontSize="{DynamicResource NormalFontSize}" />
									<ComboBox ItemTemplate="{StaticResource ColorDataTemplate}"
					          SelectedItem="{Binding SelectedAccent, Mode=TwoWay}"
					          ItemsSource="{Binding AvailableAccents}" />
									<!--<TextBlock Text="{lex:Loc Language}" FontSize="{DynamicResource NormalFontSize}" />
									<ComboBox ItemsSource="{Binding AvailableLanguages}"
					          DisplayMemberPath="NativeName"
					          SelectedItem="{Binding SelectedLanguage, Mode=TwoWay}" />-->
								</StackPanel>
							</DataTemplate>
						</local:GenericTemplateSelectorItem>
						<local:GenericTemplateSelectorItem TemplatedType="core:UpdateSettingsViewModel">
							<DataTemplate DataType="core:UpdateSettingsViewModel">
								<StackPanel Orientation="Vertical">
									<CheckBox IsChecked="{Binding EnableUpdates}" Content="{lex:Loc AutomaticallyUpdate}" Margin="5" />
									<CheckBox IsChecked="{Binding IncludeBetaReleases}" Content="{lex:Loc UpdateToBetaReleases}" IsEnabled="{Binding EnableUpdates}" Margin="5" />

									<TextBlock Text="{Binding LastUpdateCheck, StringFormat={lex:Loc LastUpdateCheckFormat}}" Margin="5,10,5,5" />
									<Button Content="{lex:Loc CheckForUpdatesNow}" Margin="5" />
								</StackPanel>
							</DataTemplate>
						</local:GenericTemplateSelectorItem>
						<local:GenericTemplateSelectorItem TemplatedType="settings:PluginSettingsViewModel">
							<DataTemplate DataType="settings:PluginSettingsViewModel">
								<Grid>
									<ContentControl Content="{Binding Content}" Visibility="{Binding HasViewImplementation, Converter={StaticResource BoolToVisibleConv}}"/>
									<ContentControl Content="{Binding Content, Converter={StaticResource SettingsEditorConv}}" Visibility="{Binding HasViewImplementation, Converter={StaticResource InvertBoolToVisibleConv}}"/>
								</Grid>
							</DataTemplate>
						</local:GenericTemplateSelectorItem>
						<local:GenericTemplateSelectorItem TemplatedType="settings:PluginListViewModel" Template="{StaticResource EmptySettingsSections}" />
						<local:GenericTemplateSelectorItem TemplatedType="core:CoreSettingsViewModel" Template="{StaticResource EmptySettingsSections}" />
					</local:GenericTemplateSelector>
				</ContentControl.ContentTemplateSelector>
			</ContentControl>
		</ScrollViewer>

		<DockPanel Grid.Row="1" Grid.Column="2">
			<StackPanel Orientation="Horizontal"  HorizontalAlignment="Right" DockPanel.Dock="Right">
				<StackPanel.Resources>
					<Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
						<Setter Property="MinWidth" Value="75" />
						<Setter Property="Margin" Value="5" />
					</Style>
				</StackPanel.Resources>
				<Button Content="Save" IsDefault="True" Command="{Binding SaveCommand}" />
				<Button Content="Cancel" IsCancel="True" Command="{Binding CancelCommand}" />
			</StackPanel>
			
			<TextBlock Text="{Binding UnsavedChanges, StringFormat={lex:Loc UnsavedChangesCountFormat}}" DockPanel.Dock="Left" 
					   VerticalAlignment="Center" Margin="5,0" FontSize="{DynamicResource NormalFontSize}"
					   Visibility="{Binding HasUnsavedChanges, Converter={StaticResource BoolToVisibleConv}}" />
		</DockPanel>
		
	</Grid>
</controls:MetroWindow>